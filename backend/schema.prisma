// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      String     @id @default(cuid())
  name                    String     @default("")
  email                   String     @unique @default("")
  password                String
  cart                    CartItem[] @relation("CartItem_customer")
  orders                  Order?     @relation("Order_customer")
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
}

model Product {
  id                    String        @id @default(cuid())
  name                  String        @default("")
  description           String        @default("")
  status                String?       @default("DRAFT")
  price                 Int
  photo                 ProductImage? @relation("Product_photo", fields: [photoId], references: [id])
  photoId               String?       @unique @map("photo")
  from_CartItem_product CartItem[]    @relation("CartItem_product")
}

model ProductImage {
  id                   String      @id @default(cuid())
  altText              String      @default("")
  image_filesize       Int?
  image_extension      String?
  image_width          Int?
  image_height         Int?
  image_id             String?
  product              Product?    @relation("Product_photo")
  from_OrderItem_photo OrderItem[] @relation("OrderItem_photo")
}

model CartItem {
  id         String   @id @default(cuid())
  quantity   Int      @default(1)
  product    Product? @relation("CartItem_product", fields: [productId], references: [id])
  productId  String?  @map("product")
  customer   User?    @relation("CartItem_customer", fields: [customerId], references: [id])
  customerId String?  @map("customer")

  @@index([productId])
  @@index([customerId])
}

model OrderItem {
  id          String        @id @default(cuid())
  name        String        @default("")
  description String        @default("")
  photo       ProductImage? @relation("OrderItem_photo", fields: [photoId], references: [id])
  photoId     String?       @map("photo")
  price       Int?
  quantity    Int?
  order       Order?        @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId     String?       @map("order")

  @@index([photoId])
  @@index([orderId])
}

model Order {
  id         String      @id @default(cuid())
  total      Int?
  items      OrderItem[] @relation("OrderItem_order")
  customer   User?       @relation("Order_customer", fields: [customerId], references: [id])
  customerId String?     @unique @map("customer")
  charge     String      @default("")
}
